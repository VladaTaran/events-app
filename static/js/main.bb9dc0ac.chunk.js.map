{"version":3,"sources":["serviceWorker.js","shared/navPath.js","app/SideBar/SideBar.jsx","app/Calendar/TimePicker.jsx","app/Calendar/Modal.jsx","app/Calendar/Calendar.jsx","app/Router/Router.jsx","index.js"],"names":["Boolean","window","location","hostname","match","navPath","currPath","name","path","SideBar","Aside","Nav","NavBox","LogoBox","Logo","to","map","sideBarItem","List","key","Navigation","exact","Title","styled","aside","li","Link","nav","ul","NavLink","span","MaterialUIPickers","onChange","start","utils","DateFnsUtils","Grid","container","justify","disableToolbar","variant","format","margin","id","disablePast","value","Date","date","KeyboardButtonProps","Modal","end","openEvent","handleClose","title","setTitle","description","setDescription","deleteEvent","updateEvent","handleStartTime","handleEndTime","setNewEvent","openSlot","changeTime","time","split","hours","minutes","console","log","moment","set","StyledDialog","open","onClose","aria-labelledby","StyledContent","TextField","e","preventDefault","target","style","width","display","StyledTextField","type","defaultValue","InputLabelProps","shrink","inputProps","step","DialogActions","Button","onClick","color","disabled","length","Dialog","DialogContent","localizer","momentLocalizer","Calendar","useState","events","parseEvents","clickedEvent","eventInfo","handleEvent","useEffect","savedEvents","localStorage","getItem","changeEventsWithDate","JSON","parse","event","getEvents","Paper","padding","maxWidth","height","SubTitle","views","timeslots","defaultView","defaultDate","selectable","onSelectEvent","handleEventSelected","onSelectSlot","slotInfo","prevProps","handleSlotSelected","updatedEvents","filter","setItem","stringify","index","findIndex","updatedEvent","slice","toDate","appointment","push","div","AppRouter","basename","process","position","left","top","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb9dc0ac.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const navPath = [\r\n  { currPath: \"/\", name: \"Home\", path: \"/\" },\r\n  { currPath: \"/dashboard\", name: \"Dashboard\", path: \"/dashboard\" },\r\n  { currPath: \"/inbox\", name: \"Inbox\", path: \"/inbox\" },\r\n  { currPath: \"/products\", name: \"Products\", path: \"/products\" },\r\n  { currPath: \"/invoices\", name: \"Invoices\", path: \"/invoices\" },\r\n  { currPath: \"/customers\", name: \"Customers\", path: \"/customers\" },\r\n  { currPath: \"/chat-room\", name: \"Chat Room\", path: \"/chat-room\" },\r\n  { currPath: \"/calendar\", name: \"Calendar\", path: \"/calendar\" },\r\n  { currPath: \"/help\", name: \"Help Center\", path: \"/help\" },\r\n  { currPath: \"/settings\", name: \"Settings\", path: \"/settings\" }\r\n];","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport {navPath} from 'shared/navPath';\r\n\r\nconst SideBar = () => {\r\n  return (\r\n    <Aside>\r\n      <div>\r\n        <Nav>\r\n          <NavBox>\r\n            <LogoBox>\r\n              <Logo to=\"/\">IMPEKABLE</Logo>\r\n            </LogoBox>\r\n            {navPath.map(sideBarItem =>(\r\n              <List key={sideBarItem.name}>\r\n                <Navigation to={sideBarItem.path} exact={sideBarItem.path === \"/\"}>\r\n                  <Title>{sideBarItem.name}</Title>\r\n                </Navigation>\r\n              </List>\r\n              ))\r\n            }\r\n          </NavBox>\r\n        </Nav>\r\n      </div>\r\n    </Aside>\r\n  )\r\n}\r\n\r\nexport default SideBar;\r\n\r\nconst Aside = styled.aside`\r\n  background: white;\r\n  flex: 0 1 250px;\r\n  min-width: 250px;\r\n  position: relative;\r\n  z-index: 5;\r\n  transition: all 0s;\r\n`;\r\nconst LogoBox = styled.li`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #3c3b54;\r\n`;\r\nconst Logo = styled(Link)`\r\n  position: relative;\r\n  color: white;\r\n  width: 160px;\r\n  z-index: 1;\r\n  text-decoration: none;\r\n  padding-left: 5px;\r\n  font-size: 15px;\r\n`;\r\nconst Nav = styled.nav`\r\n  position: relative;\r\n`;\r\nconst NavBox = styled.ul`\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  width: 160px; \r\n  position: fixed; \r\n  top: 0;\r\n  left: 0;\r\n  background-color: #43425D;\r\n  overflow-x: hidden; \r\n`;\r\nconst List = styled.li`\r\n  display: block;\r\n  margin: 0 0 2px;\r\n  padding: 0;\r\n  & a {\r\n    padding-left: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\nconst Navigation = styled(NavLink)`\r\n  display: block;\r\n  color: #adacb8;\r\n  position: relative;\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  // transition: all .2s;\r\n  min-height: 36px;\r\n  &.active {\r\n    \r\n    background: #3c3b54;\r\n    color: white;\r\n    // &::before{\r\n    //   content: '';\r\n    //   width: 12px;\r\n    //   background-color: #a3a0fb !important;\r\n    // }  \r\n  };\r\n\r\n  }\r\n`;\r\nconst Title = styled.span``;","import React from 'react';\r\nimport DateFnsUtils from '@date-io/moment';\r\nimport moment from 'moment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst MaterialUIPickers = ({ onChange, start}) => {\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/DD/YYYY\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          disablePast\r\n          value={new Date(start)}\r\n          onChange={date=>onChange(date.format())}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n\r\nexport default MaterialUIPickers","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport  MaterialUIPickers  from './TimePicker';\r\n\r\nconst Modal = ({\r\n  start,\r\n  end,\r\n  openEvent, \r\n  handleClose, \r\n  title, \r\n  setTitle,\r\n  description, \r\n  setDescription, \r\n  deleteEvent, \r\n  updateEvent, \r\n  handleStartTime,\r\n  handleEndTime,\r\n  setNewEvent,\r\n  openSlot\r\n  }) => {\r\n\r\n  const changeTime = (time, name )=> {\r\n    const [hours, minutes] = time.split(':');\r\n    console.log(\"change time\", moment(start).set({ hours, minutes }).format())\r\n    name === 'start' \r\n    ? handleStartTime(moment(start).set({ hours, minutes }).format())\r\n    : handleEndTime(moment(start).set({ hours, minutes }).format())\r\n  }\r\n  return (\r\n    <form >\r\n      <StyledDialog\r\n        open={openEvent || openSlot || false} \r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <StyledContent>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              onChange={e => {\r\n                e.preventDefault();\r\n                setTitle(e.target.value);\r\n              }}\r\n              margin=\"normal\"\r\n              value={title}\r\n            />\r\n          </div>\r\n          <div>\r\n            <MaterialUIPickers \r\n              onChange={handleStartTime}\r\n              start={start}\r\n            />\r\n          </div>\r\n          <span>event time</span>\r\n          <div style={{width: '100%', display: \"flex\"}}>\r\n            <StyledTextField\r\n              type=\"time\"\r\n              name=\"start\"\r\n              defaultValue={moment().format(\"HH:mm\")}\r\n              InputLabelProps={{ shrink: true }}\r\n              inputProps={{ step: 300 }}\r\n              onChange={(e)=> changeTime(e.target.value, e.target.name)}\r\n            />\r\n            <StyledTextField\r\n              type=\"time\"\r\n              name=\"end\"\r\n              defaultValue={moment(end).format(\"HH:mm\")}\r\n              InputLabelProps={{ shrink: true }}\r\n              inputProps={{ step: 300 }}\r\n              onChange={(e)=> changeTime(e.target.value, e.target.name)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              margin=\"normal\"\r\n              value={description}\r\n              onChange={e => {\r\n                setDescription(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <DialogActions>\r\n            <Button \r\n              onClick={(e) => {\r\n                openEvent ? deleteEvent(e) : handleClose()\r\n                handleClose();\r\n              }} \r\n              color=\"primary\"\r\n            >\r\n              {openEvent ? \"Discard\" : \"Cancel\"}\r\n            </Button>\r\n            <Button \r\n              onClick={()=> {\r\n                openEvent ? updateEvent() : setNewEvent(); \r\n                handleClose();\r\n              }} \r\n              color=\"primary\"\r\n              disabled={!title || !description || description.length>36}\r\n            >\r\n              {openEvent ? \"Edit\" : \"Save\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </StyledContent>\r\n      </StyledDialog>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Modal;\r\n\r\nconst StyledDialog = styled(Dialog)`\r\n  .MuiPaper-root {\r\n    width: 230px;\r\n    height: 280px;\r\n    background: #FFFFFF 0% 0% no-repeat padding-box;\r\n    box-shadow: 0px 3px 18px #00000029;\r\n    border: 1px solid #43425D;\r\n    border-radius: 10px;\r\n  };\r\n  .MuiFormControl-marginNormal {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledContent = styled(DialogContent)`\r\n  .MuiDialogContent-root {\r\n    padding-top: 0;\r\n  }\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  & input::-webkit-clear-button, \r\n  & input::-webkit-outer-spin-button, \r\n  & input::-webkit-inner-spin-button\": {\r\n    display: \"none\"\r\n}\r\n`;","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Calendar as BigCalendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport Modal from './Modal';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst Calendar = () => {\r\n  const [events, parseEvents] =  useState([]);\r\n  const [eventInfo, handleEvent] = useState({\r\n    openEvent: false,\r\n    clickedEvent: {},\r\n    start: new Date(),\r\n    end: new Date(),\r\n    title: '',\r\n    description: '',\r\n    openSlot: false\r\n  });\r\n  const getEvents = () => {\r\n    const savedEvents = window.localStorage.getItem('savedEvents');\r\n    const changeEventsWithDate = savedEvents && JSON.parse(savedEvents).map(event => {\r\n      event.start = new Date(event.start);\r\n      event.end = new Date(event.end);\r\n      return event;\r\n    });\r\n    parseEvents(changeEventsWithDate);\r\n }\r\n  useEffect(()=>{\r\n    getEvents()\r\n  }, []);\r\n  const handleEventSelected = e => {\r\n    handleEvent({\r\n      openEvent: true,\r\n      clickedEvent: e,\r\n      start: new Date(e.start),\r\n      end: new Date(e.end),\r\n      title: e.title,\r\n      description: e.description\r\n    });\r\n  }\r\nconst handleSlotSelected = slotInfo => {\r\n  handleEvent( prevProps => ({\r\n    ...prevProps,\r\n    title: slotInfo.title,\r\n    description: slotInfo.description,\r\n    start: new Date(slotInfo.start),\r\n    end: new Date(slotInfo.end),\r\n    openSlot: true,\r\n  }));\r\n}\r\n\r\nconst handleClose = () => handleEvent(prevProps => ({ ...prevProps,openSlot: false, openEvent: false }));\r\n\r\nconst setNewEvent = () => {\r\n  const { start, end, title, description } = eventInfo;\r\n  const appointment = { title, start, end, description };\r\n  events.push(appointment); \r\n  handleEvent(prevProps => ({...prevProps, events }));\r\n  window.localStorage.setItem('savedEvents', JSON.stringify(events));\r\n}\r\n\r\nconst deleteEvent = () => {\r\n  const updatedEvents = events.filter(event => event.start !== eventInfo.clickedEvent.start && event);\r\n  parseEvents(updatedEvents);\r\n  window.localStorage.setItem(\"savedEvents\", JSON.stringify(updatedEvents));\r\n}\r\n\r\nconst setTitle = title => handleEvent(prevProps => ({ ...prevProps, title }));\r\nconst setDescription = description => handleEvent(prevProps => ({ ...prevProps, description }));\r\nconst handleStartTime = date => handleEvent(prevProps => ({ ...prevProps, start: moment(date).toDate() }) ); \r\nconst handleEndTime = date => handleEvent(prevProps => ({ ...prevProps, end: moment(date).toDate() }) ); \r\n\r\nconst updateEvent = () => {\r\n  const { title, description, start, end, clickedEvent } = eventInfo;\r\n    const index = events.findIndex(event => event === clickedEvent);\r\n    const updatedEvent = events.slice();\r\n    updatedEvent[index].title = title;\r\n    updatedEvent[index].description = description;\r\n    updatedEvent[index].start = new Date(start);\r\n    updatedEvent[index].end = new Date(end);\r\n    window.localStorage.setItem(\"savedEvents\", JSON.stringify(updatedEvent));\r\n    handleEvent(prevProps => ({ ...prevProps, events: updatedEvent }) );\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Title>Calendar</Title>\r\n      <Paper \r\n        style={{\r\n          padding: \"20px\", \r\n          maxWidth: \"1170px\",\r\n          width: \"100%\", \r\n          height: \"520px\"\r\n        }}\r\n      >\r\n        <div>\r\n          <SubTitle>Calendar View</SubTitle>\r\n          <BigCalendar\r\n            localizer={localizer}\r\n            events={events}\r\n            views={[\"month\", \"week\", \"day\", \"agenda\"]}\r\n            timeslots={2}\r\n            defaultView=\"month\"\r\n            defaultDate={new Date()}\r\n            selectable\r\n            onSelectEvent={e => handleEventSelected(e)}\r\n            onSelectSlot={slotInfo => handleSlotSelected(slotInfo)}\r\n            style={{height: 450,margin: \"0 auto\",width: \"1170px\"}}\r\n          />\r\n          <Modal \r\n            start={eventInfo.start}\r\n            end={eventInfo.end}\r\n            openEvent={eventInfo.openEvent}\r\n            handleClose={handleClose}\r\n            title={eventInfo.title}\r\n            setTitle={setTitle}\r\n            description={eventInfo.description}\r\n            setDescription={setDescription}\r\n            deleteEvent={deleteEvent}\r\n            updateEvent={updateEvent}\r\n            handleStartTime={handleStartTime}\r\n            handleEndTime={handleEndTime}\r\n            setNewEvent={setNewEvent}\r\n            openSlot={eventInfo.openSlot}\r\n          />\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Calendar;\r\n\r\nconst Title = styled.div`\r\n  color: #6e6d83;\r\n  font-family: \"Source Sans Pro\";\r\n  font-size: 28px;\r\n  margin-bottom: 32px;\r\n`;\r\nconst SubTitle = styled.span`\r\n  display: inline-block;\r\n  font-size: 18px; \r\n  color: #4D4F5C;\r\n  margin-bottom: 15px;\r\n`;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport SideBar from '../SideBar/SideBar';\r\nimport Calendar from '../Calendar/Calendar';\r\n\r\nconst AppRouter = () => (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n        <div>\r\n            <SideBar />\r\n            <main style={{position:\"absolute\", left: \"235px\", top:\"70px\"}}>\r\n                <Switch>\r\n                    <Route path=\"/calendar\" component={Calendar} exact />\r\n                </Switch>\r\n            </main>\r\n        </div>   \r\n    </Router>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter from 'app/Router/Router';\n\nReactDOM.render(\n  // <MuiThemeProvider>\n    <AppRouter />,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}